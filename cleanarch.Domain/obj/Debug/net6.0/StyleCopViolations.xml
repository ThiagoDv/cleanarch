<StyleCopViolations>
  <Violation Section="Root.cleanarch.Domain.Entities.Category.Products" LineNumber="11" Source="I:\cleanarch\cleanarch.Domain\Entities\Category.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Category.Category%string" LineNumber="15" Source="I:\cleanarch\cleanarch.Domain\Entities\Category.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Category.Category%int%string" LineNumber="20" Source="I:\cleanarch\cleanarch.Domain\Entities\Category.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Category.ValidateCategory%string" LineNumber="29" Source="I:\cleanarch\cleanarch.Domain\Entities\Category.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Category.Update%string" LineNumber="40" Source="I:\cleanarch\cleanarch.Domain\Entities\Category.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="I:\cleanarch\cleanarch.Domain\Entities\Category.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities" LineNumber="3" Source="I:\cleanarch\cleanarch.Domain\Entities\Category.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">namespace names begin with an upper-case letter: cleanarch.</Violation>
  <Violation Section="Root.cleanarch.Domain.Validation" LineNumber="1" Source="I:\cleanarch\cleanarch.Domain\Entities\Category.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Category.Products" LineNumber="11" Source="I:\cleanarch\cleanarch.Domain\Entities\Category.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All properties must be placed after all constructors.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Category.ValidateCategory%string" LineNumber="31" Source="I:\cleanarch\cleanarch.Domain\Entities\Category.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="DoNotPlaceRegionsWithinElements" RuleId="SA1123">The use of regions is not allowed within code elements. Remove the #region and #endregion tags.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Category.Category%string" LineNumber="17" StartLine="17" StartColumn="13" EndLine="17" EndColumn="28" Source="I:\cleanarch\cleanarch.Domain\Entities\Category.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to ValidateCategory must begin with the 'this.', 'base.', 'object.' or 'Category.' or 'Entity.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Category.Category%int%string" LineNumber="23" StartLine="23" StartColumn="13" EndLine="23" EndColumn="14" Source="I:\cleanarch\cleanarch.Domain\Entities\Category.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to Id must begin with the 'this.', 'base.', 'object.' or 'Category.' or 'Entity.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Category.Category%int%string" LineNumber="24" StartLine="24" StartColumn="13" EndLine="24" EndColumn="28" Source="I:\cleanarch\cleanarch.Domain\Entities\Category.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to ValidateCategory must begin with the 'this.', 'base.', 'object.' or 'Category.' or 'Entity.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Category.ValidateCategory%string" LineNumber="37" StartLine="37" StartColumn="13" EndLine="37" EndColumn="16" Source="I:\cleanarch\cleanarch.Domain\Entities\Category.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to Name must begin with the 'this.', 'base.', 'object.' or 'Category.' or 'Entity.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Category.Update%string" LineNumber="42" StartLine="42" StartColumn="13" EndLine="42" EndColumn="28" Source="I:\cleanarch\cleanarch.Domain\Entities\Category.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to ValidateCategory must begin with the 'this.', 'base.', 'object.' or 'Category.' or 'Entity.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Entity" LineNumber="3" Source="I:\cleanarch\cleanarch.Domain\Entities\Entity.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Entity.Id" LineNumber="5" Source="I:\cleanarch\cleanarch.Domain\Entities\Entity.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Entity.Name" LineNumber="7" Source="I:\cleanarch\cleanarch.Domain\Entities\Entity.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="I:\cleanarch\cleanarch.Domain\Entities\Entity.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities" LineNumber="1" Source="I:\cleanarch\cleanarch.Domain\Entities\Entity.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">namespace names begin with an upper-case letter: cleanarch.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.Description" LineNumber="11" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.Price" LineNumber="13" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.Stock" LineNumber="15" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.Image" LineNumber="17" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.CategoryId" LineNumber="19" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.Category" LineNumber="21" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.Product%int%string%string%decimal%long%string" LineNumber="25" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.Product%string%string%decimal%long%string" LineNumber="30" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.ValidateProduct%string%string%decimal%long%string" LineNumber="38" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.Product%string%string%decimal%long%string" LineNumber="30" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.Product%int%string%string%decimal%long%string" LineNumber="29" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities" LineNumber="3" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">namespace names begin with an upper-case letter: cleanarch.</Violation>
  <Violation Section="Root.cleanarch.Domain.Validation" LineNumber="1" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.Description" LineNumber="25" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All properties must be placed after all constructors.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.Description" LineNumber="30" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All properties must be placed after all constructors.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.Product%int%string%string%decimal%long%string" LineNumber="28" StartLine="28" StartColumn="13" EndLine="28" EndColumn="27" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to ValidateProduct must begin with the 'this.', 'base.', 'object.' or 'Product.' or 'Entity.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.Product%string%string%decimal%long%string" LineNumber="32" StartLine="32" StartColumn="13" EndLine="32" EndColumn="27" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to ValidateProduct must begin with the 'this.', 'base.', 'object.' or 'Product.' or 'Entity.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.ValidateProduct%string%string%decimal%long%string" LineNumber="50" StartLine="50" StartColumn="13" EndLine="50" EndColumn="16" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to Name must begin with the 'this.', 'base.', 'object.' or 'Product.' or 'Entity.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.ValidateProduct%string%string%decimal%long%string" LineNumber="51" StartLine="51" StartColumn="13" EndLine="51" EndColumn="23" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to Description must begin with the 'this.', 'base.', 'object.' or 'Product.' or 'Entity.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.ValidateProduct%string%string%decimal%long%string" LineNumber="52" StartLine="52" StartColumn="13" EndLine="52" EndColumn="17" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to Price must begin with the 'this.', 'base.', 'object.' or 'Product.' or 'Entity.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.ValidateProduct%string%string%decimal%long%string" LineNumber="53" StartLine="53" StartColumn="13" EndLine="53" EndColumn="17" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to Stock must begin with the 'this.', 'base.', 'object.' or 'Product.' or 'Entity.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.cleanarch.Domain.Entities.Product.ValidateProduct%string%string%decimal%long%string" LineNumber="54" StartLine="54" StartColumn="13" EndLine="54" EndColumn="17" Source="I:\cleanarch\cleanarch.Domain\Entities\Product.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to Image must begin with the 'this.', 'base.', 'object.' or 'Product.' or 'Entity.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.cleanarch.Domain.Interfaces.ICategoryRepository.GetAllCategories" LineNumber="11" Source="I:\cleanarch\cleanarch.Domain\Interfaces\ICategoryRepository.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Interfaces.ICategoryRepository.GetCategoryById%int" LineNumber="13" Source="I:\cleanarch\cleanarch.Domain\Interfaces\ICategoryRepository.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Interfaces.ICategoryRepository.Create%Category" LineNumber="17" Source="I:\cleanarch\cleanarch.Domain\Interfaces\ICategoryRepository.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Interfaces.ICategoryRepository.Update%Category" LineNumber="18" Source="I:\cleanarch\cleanarch.Domain\Interfaces\ICategoryRepository.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Interfaces.ICategoryRepository.Delete%Category" LineNumber="19" Source="I:\cleanarch\cleanarch.Domain\Interfaces\ICategoryRepository.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="I:\cleanarch\cleanarch.Domain\Interfaces\ICategoryRepository.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.cleanarch.Domain.Interfaces.ICategoryRepository.Update%Category" LineNumber="18" Source="I:\cleanarch\cleanarch.Domain\Interfaces\ICategoryRepository.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.cleanarch.Domain.Interfaces.ICategoryRepository.Delete%Category" LineNumber="19" Source="I:\cleanarch\cleanarch.Domain\Interfaces\ICategoryRepository.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.cleanarch.Domain.Interfaces" LineNumber="3" Source="I:\cleanarch\cleanarch.Domain\Interfaces\ICategoryRepository.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">namespace names begin with an upper-case letter: cleanarch.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities" LineNumber="1" Source="I:\cleanarch\cleanarch.Domain\Interfaces\ICategoryRepository.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation Section="Root.cleanarch.Domain.Interfaces.IProductRepository.GetAllProducts" LineNumber="11" Source="I:\cleanarch\cleanarch.Domain\Interfaces\IProductRepository.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Interfaces.IProductRepository.GetProductById%int" LineNumber="13" Source="I:\cleanarch\cleanarch.Domain\Interfaces\IProductRepository.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Interfaces.IProductRepository.Create%Product" LineNumber="17" Source="I:\cleanarch\cleanarch.Domain\Interfaces\IProductRepository.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Interfaces.IProductRepository.Update%Product" LineNumber="18" Source="I:\cleanarch\cleanarch.Domain\Interfaces\IProductRepository.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Interfaces.IProductRepository.Delete%Product" LineNumber="19" Source="I:\cleanarch\cleanarch.Domain\Interfaces\IProductRepository.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="I:\cleanarch\cleanarch.Domain\Interfaces\IProductRepository.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.cleanarch.Domain.Interfaces.IProductRepository.Update%Product" LineNumber="18" Source="I:\cleanarch\cleanarch.Domain\Interfaces\IProductRepository.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.cleanarch.Domain.Interfaces.IProductRepository.Delete%Product" LineNumber="19" Source="I:\cleanarch\cleanarch.Domain\Interfaces\IProductRepository.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.cleanarch.Domain.Interfaces" LineNumber="3" Source="I:\cleanarch\cleanarch.Domain\Interfaces\IProductRepository.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">namespace names begin with an upper-case letter: cleanarch.</Violation>
  <Violation Section="Root.cleanarch.Domain.Entities" LineNumber="1" Source="I:\cleanarch\cleanarch.Domain\Interfaces\IProductRepository.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation Section="Root.cleanarch.Domain.Validation.DomainExceptionValidation.DomainExceptionValidation%string" LineNumber="8" Source="I:\cleanarch\cleanarch.Domain\Validation\DomainExceptionValidation.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation Section="Root.cleanarch.Domain.Validation.DomainExceptionValidation.When%bool%string" LineNumber="11" Source="I:\cleanarch\cleanarch.Domain\Validation\DomainExceptionValidation.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="I:\cleanarch\cleanarch.Domain\Validation\DomainExceptionValidation.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.cleanarch.Domain.Validation.DomainExceptionValidation.DomainExceptionValidation%string" LineNumber="9" Source="I:\cleanarch\cleanarch.Domain\Validation\DomainExceptionValidation.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementMustNotBeOnSingleLine" RuleId="SA1502">The constructor must not be placed on a single line. The opening and closing curly brackets must each be placed on their own line.</Violation>
  <Violation Section="Root.cleanarch.Domain.Validation.DomainExceptionValidation.When%bool%string" LineNumber="14" Source="I:\cleanarch\cleanarch.Domain\Validation\DomainExceptionValidation.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation Section="Root.cleanarch.Domain.Validation" LineNumber="1" Source="I:\cleanarch\cleanarch.Domain\Validation\DomainExceptionValidation.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">namespace names begin with an upper-case letter: cleanarch.</Violation>
  <Violation Section="Root.cleanarch.Domain.Validation.DomainExceptionValidation.DomainExceptionValidation%string" LineNumber="9" StartLine="9" StartColumn="9" EndLine="9" EndColumn="9" Source="I:\cleanarch\cleanarch.Domain\Validation\DomainExceptionValidation.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="OpeningCurlyBracketsMustBeSpacedCorrectly" RuleId="SA1012">Invalid spacing around the opening curly bracket.</Violation>
  <Violation Section="Root.cleanarch.Domain.Validation.DomainExceptionValidation.DomainExceptionValidation%string" LineNumber="9" StartLine="9" StartColumn="10" EndLine="9" EndColumn="10" Source="I:\cleanarch\cleanarch.Domain\Validation\DomainExceptionValidation.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="ClosingCurlyBracketsMustBeSpacedCorrectly" RuleId="SA1013">Invalid spacing around the closing curly bracket.</Violation>
  <Violation Section="Root.cleanarch.Domain.Validation.DomainExceptionValidation.When%bool%string" LineNumber="13" StartLine="13" StartColumn="13" EndLine="13" EndColumn="14" Source="I:\cleanarch\cleanarch.Domain\Validation\DomainExceptionValidation.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="KeywordsMustBeSpacedCorrectly" RuleId="SA1000">The spacing around the keyword 'if' is invalid.</Violation>
</StyleCopViolations>